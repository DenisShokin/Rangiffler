version: '3.9'

services:
  rangiffler-all-db:
    container_name: rangiffler-all-db
    image: postgres:15.1
    environment:
      - POSTGRES_MULTIPLE_DATABASES="rangiffler-auth","rangiffler-geo","rangiffler-photo","rangiffler-userdata"
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 3s
      timeout: 3s
      retries: 5
    ports:
      - "5432:5432"
    expose:
      - "5432"
    volumes:
      - ./postgres:/docker-entrypoint-initdb.d
    restart: always
    networks:
      - rangiffler-network
    dns_search: .

  auth.rangiffler.dc:
    container_name: auth.rangiffler.dc
    image: shokindenis/rangiffler-auth:latest
    ports:
      - "9000:9000"
    healthcheck:
      test: "wget --spider http://localhost:9000/actuator/health || exit 1"
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always
    depends_on:
      rangiffler-all-db:
        condition: service_healthy
    networks:
      - rangiffler-network
    dns_search: .

  gateway.rangiffler.dc:
    container_name: gateway.rangiffler.dc
    image: shokindenis/rangiffler-gateway:latest
    ports:
      - "8080:8080"
    healthcheck:
      test: "wget --spider http://localhost:8080/actuator/health || exit 1"
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always
    depends_on:
      - auth.rangiffler.dc
    networks:
      - rangiffler-network
    dns_search: .

  geo.rangiffler.dc:
    container_name: geo.rangiffler.dc
    image: shokindenis/rangiffler-geo:latest
    expose:
      - "8081"
    restart: always
    depends_on:
      rangiffler-all-db:
        condition: service_healthy
    networks:
      - rangiffler-network
    dns_search: .

  users.rangiffler.dc:
    container_name: users.rangiffler.dc
    image: shokindenis/rangiffler-users:latest
    expose:
      - "8089"
    restart: always
    depends_on:
      rangiffler-all-db:
        condition: service_healthy
    networks:
      - rangiffler-network
    dns_search: .

  photo.rangiffler.dc:
    container_name: photo.rangiffler.dc
    image: shokindenis/rangiffler-photo:latest
    expose:
      - "8082"
    restart: always
    depends_on:
      rangiffler-all-db:
        condition: service_healthy
    networks:
      - rangiffler-network
    dns_search: .

  client.rangiffler.dc:
    container_name: client.rangiffler.dc
    image: shokindenis/rangiffler-client:latest
    ports:
      - "80:80"
    restart: always
    depends_on:
      gateway.rangiffler.dc:
        condition: service_healthy
    networks:
      - rangiffler-network
    dns_search: .

volumes:
  pgdata:
    external: true

networks:
  rangiffler-network:
    driver: bridge